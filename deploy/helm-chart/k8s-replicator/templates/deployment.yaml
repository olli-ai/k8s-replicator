{{- $replicators := "" -}}
{{- if kindIs "string" .Values.runReplicators -}}
  {{- $replicators = .Values.runReplicators | lower -}}
{{- else if kindIs "slice" .Values.runReplicators -}}
  {{- $replicators = .Values.runReplicators | join "," -}}
{{- else -}}
  {{- printf "invalid runReplicators option of type %s" (kindOf .Values.runReplicators) | fail -}}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-replicator.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "k8s-replicator.name" . }}
    helm.sh/chart: {{ include "k8s-replicator.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- with .Values.deployment.annotations  }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "k8s-replicator.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "k8s-replicator.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{- with .Values.pod.annotations  }}
      annotations:
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: replicator
        image: "{{ .Values.image.repository }}:{{ default .Chart.Version .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /k8s-replicator
        - --annotations-prefix
        - {{ template "k8s-replicator.prefix" . }}
        {{- if .Values.allowAll }}
        - --allow-all
        {{- end }}
        {{- if .Values.ignoreUnknown }}
        - --ignore-unknown
        {{- end }}
        - --resync-period
        - {{ .Values.resyncPeriod | quote }}
        - --create-with-labels
        - {{ .Values.createWithLabels | quote }}
        - --run-replicators
        - {{ $replicators | quote }}
        ports:
        - name: health
          containerPort: 9102
        readinessProbe:
          httpGet:
            path: /healthz
            port: health
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      serviceAccountName: {{ default (include "k8s-replicator.fullname" .) .Values.serviceAccount.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
